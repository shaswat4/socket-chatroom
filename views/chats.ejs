<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    Chats
  </title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
  <link rel="stylesheet" href="stylesheets/chat.css">
  <link rel="stylesheet" href="/stylesheets/style.css" />

</head>

<body>

  <%- include("partials/navbar") %>

    <div class="current-user" hidden></div>

    <section id="chat-sidebar">
      <div class="chat-nav">
        <div class="chat-header">
          <!-- contain search and other actions -->
          <h1>Chats</h1>
          <form action="/chat/search" method="post" class="chat-search">
            <input type="text" class="chat-search-input" name="query">
          </form>
          <!-- <button class="create-group">Create Group</button> -->
          <button type="button" class="btn btn-primary create-group" data-bs-toggle="modal" data-bs-target="#exampleModal">
            Create Group</button>
    
          <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h1 class="modal-title fs-5" id="exampleModalLabel">Create new Group</h1>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form class="create-group-form">
                <div class="modal-body">
                  
                    <div class="mb-3">
                      <label for="group-name" class="col-form-label">Group name</label>
                      <input type="text" class="form-control" id="group-name" required autocomplete="off">
                    </div>
                    <div class="mb-3">
                      <label for="group-description" class="col-form-label">Description:</label>
                      <textarea class="form-control" id="group-description"></textarea>

                    </div>

                    <div class="create-group-users-list">

                    </div>

                  
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary modal-close" data-bs-dismiss="modal">Close</button>
                  <button type="submit" class="btn btn-primary create-group-btn create-group-final">Create</button>
                </div>
              </form>
              </div>
            </div>
          </div>
    
        </div>
    
        <div id="chat-nav-body">
          <!-- contain chat list and will dynamically reload on searching-->
          <ul>
            <h1>safgiks</h1>
          </ul>
        </div>

      </div>
    </section>
    <section id="chat-message-display">
      <div class="chat-main">
        <div >
          <div class="chat-main-header"></div>
          <button class="btn add-user" data-bs-toggle="modal" data-bs-target="#addUser">Add User</button>
          <button class="btn exit-group">Exit Group</button>
          <button class="btn delete-group">Delete Group</button>
          <button class="btn update-group" data-bs-toggle="modal" data-bs-target="#updateGroup">Update Group</button>
          <button class="btn group-users">See participants</button>

        </div>
        <div class="chat-main-body">

          <ul id="chat-main-body-messages">

          </ul>

        </div>
        <div class="chat-main-input">
          <form id="send-message-form" action="" enctype="multipart/form-data">
            <input id="input" autocomplete="off" />
            <input type="file" name="" id="user-file-input">
            <button type="submit">Send</button>
          </form>
        </div>
      </div>
    </section>

    <section id="create-group-modal">
    </section>

    <section id="hidden-components">
      <div class="modal fade" id="updateGroup" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Update Group</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <form class="update-group-form">
          <div class="modal-body">
            
              <div class="mb-3">
                <label for="group-name" class="col-form-label">Change Group name</label>
                <input type="text" class="form-control" id="group-name-update" required autocomplete="off">
              </div>
              <div class="mb-3">
                <label for="group-description" class="col-form-label">Change Group Description:</label>
                <textarea class="form-control" id="group-description-update"></textarea>

              </div>

              <div class="create-group-users-list">

              </div>

            
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary modal-close update-modal-close" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary create-group-btn update-group-final">Update</button>
          </div>
        </form>
        </div>
      </div>
    </div>
      
    <div class="modal fade" id="addUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Add users to Group</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <form class="add-user-group-form">
          <div class="modal-body">
            
            <div class="group-users-list">

              <div class="box" syle="display: flex;">
                <div class="user-item">
                  <input data-user-id="1" type="checkbox" >
                  <span>User API isn't working</span>
                </div>
              </div>

            </div>

          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary modal-close add-user-modal-close" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary create-group-btn add-user-group-final">Add User</button>
          </div>
        </form>
        </div>
      </div>
    </div>
      
    </section>


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
      crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"></script>
    <script src="/javascripts/chat_aux.js"></script>

    <script>
      var socket = io();


      var form = document.getElementById("form");
      var input = document.getElementById("input");
      var room_id = null;

      var other_user = null;

      
      getActiveChat();

      $.ajax({
        url: "chat/getLoggedUser",
        type: "POST",
        //data: { user_id: value },
        success: function (data) {
          // Handle the response from the server
          logged_user = data;
        },
        error: function (jqXHR, textStatus, errorThrown) {
          // Handle errors
          console.error("Error: " + textStatus + " - " + errorThrown);
        },
      });


      $("button.create-group").click(createGroupButtonHandler);

      $(".create-group-form").submit(createGroupAPI);

      $(".add-user").click(addUserButtonClickHandler);
      $(".exit-group").click(exitGroupHandler);
      $(".delete-group").click(deleteGroupHandler);
      $(".update-group").click(updateGroupHandeler);
      // $(".group-users").click();

      $(".update-group-form").submit(updatClickHandler);
      $(".add-user-group-form").submit(addUserSubmit);

    
      
      const fileInput = document.querySelector("input[type=file]");
      let fileIsPresent = false

      let file_param = null ;

      fileInput.addEventListener("change", () => {
        const [file] = fileInput.files;
        if (file) {
          const reader = new FileReader();

          reader.onload = () => {
            file_param = {
              name: file.name,
              type: file.type,
              size: file.size,
              result : reader.result
            }
            fileIsPresent = true
            p(file_param)
          };

          reader.readAsArrayBuffer(file)
        }
      });



      //search and main chat body loading 
      $(document).ready(function () {

        // sets another user id and calls loadchatmain
        // when user is clicked
        function handleClickOnItem() {
          var value = $(this).attr("value");

          //get group id
          // $.ajax({
          //   url: "chat/getGroupID",
          //   type: "POST",
          //   data: { user_id: value },
          //   success: function (data) {
          //     // Handle the response from the server
          //     room_id = data.group_id;
          //     console.log("room id")
          //     console.log(value);
          //     console.log(data);

          //   },
          //   error: function (jqXHR, textStatus, errorThrown) {
          //     // Handle errors
          //     console.log("Error: " + textStatus + " - " + errorThrown);
          //   },
          // });

          //clears chat 
          document.getElementById("chat-main-body-messages").innerHTML = "";


          //get chats 
          $.ajax({
            url: "chat/getMessage",
            type: "POST",
            data: { user_id: value },
            success: function (data) {
              // Handle the response from the server
              console.log(data);
              renderChatMain(data);
              //$(".chat-main-body").html(data);
            },
            error: function (jqXHR, textStatus, errorThrown) {
              // Handle errors
              console.log("Error: " + textStatus + " - " + errorThrown);
            },
          });

          console.log("Value:", value);
          other_user = value;
        }

        // when user searches gives result in html with list
        $(".chat-search").submit(function (e) {
          e.preventDefault();
          let a = $(".chat-search-input").val();
          console.log(a);

          $.ajax({
            url: "chat/search",
            type: "POST",
            data: { query: a },
            success: function (data) {
              // Handle the response from the server
              displayList(data , "search")
              $(".chat-nav-item").click(clickOnsearchItem);
            },
            error: function (jqXHR, textStatus, errorThrown) {
              // Handle errors
              console.log("Error: " + textStatus + " - " + errorThrown);
            },
          });
        });
      });


      //chat message 2 emitor
      $("#send-message-form").submit( async function (e) {
        e.preventDefault();
        console.log('dfaghjkl');

        if (input.value ) {

          //created new group and/or get user id
          // intsert into room

          if ( current_chat.group_id == undefined ){
            p("in here")
            await createUserChat();
          }

          socket.emit("chat message 2", {
            room: current_chat.group_id,
            message: input.value,
            user_id: logged_user.id ,
          });
          console.log(input.value);
          input.value = "";
        }

        if ( fileIsPresent == true && file_param != null){
          if ( current_chat.group_id == undefined ){
            p("in here")
            await createUserChat();
          }

          socket.emit("file upload", {
            room: current_chat.group_id,
            message: null,
            user_id: logged_user.id ,
            file_param : file_param, 
          });

          fileInput.value = "";
          file_param = null;
        }

      });

      //chat group messge recievor 
      socket.on("chat group message", function (msg) {
        
        var messages = $("ul#chat-main-body-messages");
        function simpleMsgRender(msg) {
          var item = document.createElement('li');
          if ( logged_user.username == msg.username) {
            item.className = 'self';
          } else {
            item.className = 'other';
          }
          item.innerHTML = '<span>' + msg.username + '</span> : ' + msg.message;
          console.log(item);
          messages.append(item);
          window.scrollTo(0, document.body.scrollHeight);
        }

        simpleMsgRender(msg);

        //message_display(msg)
        //createMessageHTML(msg);
      });



    </script>

</body>

</html>